# Main-ETLProcess.ps1

# Step 1: Load Configuration
Write-Host "Step 1: Loading configuration for Anthem..."
if (-Not (Test-Path "./config/config_Anthem.json")) {
    Write-Host "Error: Configuration file './config/config_Anthem.json' not found!" -ForegroundColor Red
    exit
}
$config = Get-Content -Path "./config/config_Anthem.json" | ConvertFrom-Json
Write-Host "Loaded configuration for Anthem: $($config | ConvertTo-Json -Depth 3)"

# Step 2: Determine Script Directory for Function Imports
$scriptDir = Split-Path -Parent $MyInvocation.MyCommand.Definition
Write-Host "Step 2: Script Directory set to '$scriptDir'"

# Step 3: Import Functions
Write-Host "Step 3: Importing function files..."
. "$scriptDir/Get-SqlData.ps1"
. "$scriptDir/../functions/ImportFile.ps1"
. "$scriptDir/../functions/TransformData.ps1"
. "$scriptDir/../functions/LoadData.ps1"
. "$scriptDir/../functions/ArchiveFile.ps1"
. "$scriptDir/MappingDebug.ps1"
Write-Host "Function files imported successfully."

# Step 4: Validate Mapping Configuration
Write-Host "Step 4: Validating mapping configuration..."
$query = Get-Content -Path "$scriptDir/../sql/get_data_mapping.sql" -Raw
$query = $query -replace "@PayorName", "'Anthem'"
Validate-MappingConfig -ServerName $config.ServerName -DatabaseName $config.DatabaseName -Query $query -LogFilePath "./debug_log.txt"

# Step 5: Define and Start ETL Process
Write-Host "Step 5: Starting ETL process for member files..."
$memberKeyword = $config.MemberFileKeyword

foreach ($file in Get-ChildItem -Path $config.SourceDataPath -Filter *$memberKeyword*.*) {
    Write-Host "Processing file: $($file.Name)"
    
    # Step 5.1: Import File
    $importedData = ImportFile -FilePath $file.FullName
    if ($null -eq $importedData) {
        Write-Host "Error: Failed to import file $($file.Name). Skipping to the next file."
        continue
    }
    Write-Host "File imported successfully. Data row count: $($importedData.Rows.Count)"
    
    # Step 5.2: Transform Data
    $transformedData = TransformData -Data $importedData -MappingConfig $mappingConfig
    if ($null -eq $transformedData) {
        Write-Host "Error: Transformation failed for file $($file.Name). Skipping to the next file."
        continue
    }
    Write-Host "Data transformation complete. Transformed row count: $($transformedData.Rows.Count)"
    
    # Step 5.3: Load Data
    $loadResult = LoadData -ServerName $config.ServerName -DatabaseName $config.DatabaseName -TableName $config.DestinationTable -Data $transformedData
    if ($loadResult -eq $false) {
        Write-Host "Error: Loading data failed for file $($file.Name). Skipping to the next file."
        continue
    }
    Write-Host "Data loaded successfully into $($config.DestinationTable)."
    
    # Step 5.4: Archive File
    ArchiveFile -FilePath $file.FullName -ArchivePath $config.ArchivePath
    Write-Host "File archived successfully: $($file.Name)"
}

Write-Host "ETL Process completed successfully."
