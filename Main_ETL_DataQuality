# Main-ETLProcess.ps1

# Step 1: Load Configuration
Write-Host "Step 1: Loading configuration for Anthem..."
if (-Not (Test-Path "./config/config_Anthem.json")) {
    Write-Host "Error: Configuration file './config/config_Anthem.json' not found!" -ForegroundColor Red
    exit
}
$config = Get-Content -Path "./config/config_Anthem.json" | ConvertFrom-Json
Write-Host "Loaded configuration for Anthem: $($config | ConvertTo-Json -Depth 3)"

# Step 2: Determine Script Directory for Function Imports
$scriptDir = Split-Path -Parent $MyInvocation.MyCommand.Definition
Write-Host "Step 2: Script Directory set to '$scriptDir'"

# Step 3: Import Functions
Write-Host "Step 3: Importing function files..."
. "$scriptDir/Get-SqlData.ps1"
. "$scriptDir/../functions/ImportFile.ps1"
. "$scriptDir/../functions/TransformData.ps1"
. "$scriptDir/../functions/LoadData.ps1"
. "$scriptDir/../functions/ArchiveFile.ps1"
Write-Host "Function files imported successfully."

# Step 4: Start ETL Process
Write-Host "Step 4: Starting ETL process for member files..."
$memberKeyword = $config.MemberFileKeyword

# Process each file in the specified folder
foreach ($file in Get-ChildItem -Path $config.SourceDataPath -Filter *$memberKeyword*.*) {
    $sourceFileName = $file.Name
    Write-Host "Processing file: $sourceFileName"

    # Step 5: Load SQL Query for Data Mapping
    Write-Host "Step 5: Loading SQL query for data mapping..."
    $query = Get-Content -Path "$scriptDir/../sql/get_data_mapping.sql" -Raw
    $query = $query -replace "@PayorName", "'Anthem'"

    # Step 6: Retrieve Data Mappings
    Write-Host "Step 6: Retrieving data mappings from database..."
    $mappingConfig = Get-SqlData -ServerName $config.ServerName -DatabaseName $config.DatabaseName -Query $query

    if ($null -eq $mappingConfig -or $mappingConfig.Rows.Count -eq 0) {
        Write-Host "Warning: No mappings found for Payor: Anthem" -ForegroundColor Yellow
        continue
    }
    
    # Step 7: Import File Data
    Write-Host "Step 7: Importing data from file..."
    $data = ImportFile -FilePath $file.FullName
    Write-Host "Data imported from file: $sourceFileName"

    # Step 8: Transform Data
    Write-Host "Step 8: Transforming data..."
    $transformedData = TransformData -Data $data -MappingConfig $mappingConfig
    Write-Host "Data transformed successfully for file: $sourceFileName"

    # Step 9: Load Data into SQL Server
    Write-Host "Step 9: Loading transformed data into SQL Server..."
    LoadData -Data $transformedData -Config $config -SourceFileName $sourceFileName
    Write-Host "Data loaded into SQL Server for file: $sourceFileName"

    # Step 10: Archive Processed File
    Write-Host "Step 10: Archiving processed file..."
    ArchiveFile -FilePath $file.FullName -ArchivePath $config.ArchivePath
    Write-Host "File archived: $sourceFileName"
}

Write-Host "ETL Process completed."
