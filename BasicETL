# Configuration
$ServerName = "YourServerName"
$Database = "YourDatabase"
$FilePath = "C:\path\to\your\anthemfile.txt"
$Delimiter = "|"  # Adjust based on your file's delimiter
$DataMappingTable = "dbo.DataMapping"  # Table for mapping information
$TargetTable = "Anthem.MemberShip"  # Table for the target load

# SQL Connection String
$ConnectionString = "Server=$ServerName;Database=$Database;Integrated Security=True;"

# Function to execute SQL query and return results
function Execute-SqlQuery {
    param (
        [string]$query
    )
    
    $connection = New-Object System.Data.SqlClient.SqlConnection
    $connection.ConnectionString = $ConnectionString
    $command = $connection.CreateCommand()
    $command.CommandText = $query

    $connection.Open()
    $reader = $command.ExecuteReader()
    
    # Capture the query results in a DataTable
    $table = New-Object System.Data.DataTable
    $table.Load($reader)
    
    $connection.Close()
    return $table
}

# Step 1: Fetch Data Mapping
$mappingQuery = "SELECT SourceColumnIndex, TargetColumnName FROM $DataMappingTable WHERE TargetTable = '$TargetTable'"
$columnMappings = Execute-SqlQuery -query $mappingQuery

# Step 2: Process the Anthem file
if (Test-Path -Path $FilePath) {
    # Read all lines from the text file
    $lines = Get-Content -Path $FilePath

    # Create a list to hold SQL insert statements
    $insertStatements = @()

    # Skip the header (if present) and loop through each data line
    foreach ($line in $lines[1..$lines.Length]) {
        # Split the line based on the delimiter
        $columns = $line -split $Delimiter

        # Generate an insert statement based on mappings
        $columnNames = @()
        $values = @()
        
        foreach ($mapping in $columnMappings.Rows) {
            # Extract column index and name from mapping
            $sourceIndex = [int]$mapping["SourceColumnIndex"]
            $targetColumn = $mapping["TargetColumnName"]

            # Retrieve the column value from the file and prepare for SQL insert
            $value = $columns[$sourceIndex] -replace "'", "''"  # Escape single quotes
            $columnNames += $targetColumn
            $values += "'$value'"
        }

        # Construct SQL Insert Statement
        $insertStatement = "INSERT INTO $TargetTable (" + ($columnNames -join ", ") + ") VALUES (" + ($values -join ", ") + ");"
        $insertStatements += $insertStatement
    }

    # Step 3: Insert Data into Target Table
    $connection = New-Object System.Data.SqlClient.SqlConnection
    $connection.ConnectionString = $ConnectionString
    $connection.Open()

    foreach ($statement in $insertStatements) {
        $command = $connection.CreateCommand()
        $command.CommandText = $statement
        try {
            $command.ExecuteNonQuery() | Out-Null
            Write-Output "Inserted: $statement"
        }
        catch {
            Write-Output "Error inserting data: $($_.Exception.Message)"
        }
    }
    
    $connection.Close()
    Write-Output "Data load completed successfully."
} else {
    Write-Output "File not found at path: $FilePath"
}
