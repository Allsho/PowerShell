# Configuration
$ServerName = "YourServerName"
$Database = "YourDatabase"
$FilePath = "C:\path\to\your\anthemfile.txt"
$Delimiter = "|"
$PayorName = "Anthem"
$TargetTable = "Anthem.MemberShip"

# Fetch mappings for the specified PayorName
$MappingQuery = "SELECT IncomingColumnName, StandardizedColumnName FROM dbo.DataMapping WHERE PayorName = '$PayorName'"
$MappingResults = & sqlcmd -S $ServerName -d $Database -Q $MappingQuery -W -s"," | Out-String
$MappingLines = $MappingResults -split "`r?`n" | Where-Object { $_ -match "," }

if (-not $MappingLines) {
    Write-Output "Failed to retrieve column mappings for PayorName: $PayorName. Exiting script."
    exit
}

# Parse mappings into a dictionary
$Mappings = @{}
foreach ($line in $MappingLines) {
    $parts = $line -split ","
    if ($parts.Count -eq 2) {
        $IncomingColumn = $parts[0].Trim()
        $StandardizedColumn = $parts[1].Trim()
        $Mappings[$IncomingColumn] = $StandardizedColumn
    }
}

# Process the file and create SQL statements
if (Test-Path -Path $FilePath) {
    $lines = Get-Content -Path $FilePath
    $sqlStatements = @()

    foreach ($line in $lines[1..$lines.Length]) {
        $columns = $line -split $Delimiter
        $columnNames = @()
        $values = @()

        # Loop through each column in the file
        foreach ($IncomingColumnName in $Mappings.Keys) {
            $StandardizedColumnName = $Mappings[$IncomingColumnName]

            # Map incoming data to the standardized column name
            $columnIndex = [array]::IndexOf($lines[0] -split $Delimiter, $IncomingColumnName)
            if ($columnIndex -lt $columns.Length -and $columnIndex -ge 0) {
                $value = $columns[$columnIndex]
                $columnNames += "[$StandardizedColumnName]"
                $values += "'$value'"
            }
        }

        # Build the SQL INSERT statement for each line
        $sqlStatement = "INSERT INTO $TargetTable (" + ($columnNames -join ", ") + ") VALUES (" + ($values -join ", ") + ")"
        $sqlStatements += $sqlStatement
    }

    # Execute each SQL statement
    foreach ($sqlStatement in $sqlStatements) {
        try {
            & sqlcmd -S $ServerName -d $Database -Q $sqlStatement
            Write-Output "Inserted data successfully."
        } catch {
            Write-Output "Error inserting data: $_"
        }
    }
} else {
    Write-Output "File not found: $FilePath"
}
